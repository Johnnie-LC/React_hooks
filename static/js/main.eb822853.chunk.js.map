{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Characters.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","children","useState","theme","setTheme","Provider","value","Header","darkMode","setDarkMode","useContext","className","type","onClick","initialState","favorite","favoriteReducer","state","action","payload","CharacterItems","characters","handleClick","hidden","title","length","style","color","map","character","src","image","alt","name","id","Characters","setCharacters","useReducer","favorites","dispatch","useEffect","fetch","then","response","json","data","results","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb822853.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst ThemeContext = React.createContext({})\n\nexport function ThemeContextProvider({ children }) {\n  const [theme, setTheme] = useState(false)\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport default ThemeContext\n","import React, { useState, useContext } from 'react'\nimport '../assets/styles/components/Header.css'\nimport ThemeContext from '../context/ThemeContext'\n\n// Funcion que permite estblecer el light mode y el dark mode\n\n// el estado inicial de darkmode es false\n\nconst Header = () => {\n  const [darkMode, setDarkMode] = useState(false)\n\n  const { theme, setTheme } = useContext(ThemeContext)\n\n  // const darkmode = (isdarkMode) => {\n  //   if (!isdarkMode) {\n  //     document.querySelector('#App').style.background = 'black'\n  //     // document.querySelector('h1').style.color = 'white'\n  //   }\n  //   if (isdarkMode) {\n  //     document.querySelector('#App').style.background = 'white'\n  //     // document.querySelector('h1').style.color = 'black'\n  //   }\n  // }\n\n  const handleClick = () => {\n    setDarkMode(!darkMode)\n    darkMode ? setTheme(false) : setTheme(true)\n  }\n  return (\n    <div className={`Header ${theme ? 'lightmode' : 'darkmode'}`}>\n      <h1>ReactHooks</h1>\n      <button type=\"button\" onClick={handleClick}>\n        {darkMode ? 'Dark Mode' : 'Light Mode'}\n      </button>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect, useContext, useReducer } from 'react'\nimport '../assets/styles/components/Characters.css'\nimport ThemeContext from '../context/ThemeContext'\n\n// para usar useReducer vamos a tener un estado inicial\nconst initialState = {\n  favorite: [],\n}\n\nconst favoriteReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_FAVORITE':\n      return {\n        ...state,\n        favorite: [...state.favorite, action.payload],\n      }\n    default:\n      return state\n  }\n}\n\nconst CharacterItems = ({ theme, characters, handleClick, hidden, title }) =>\n  characters.length > 0 && (\n    <>\n      <h2\n        style={{ color: `${theme ? 'black' : 'white'}` }}\n        className={`${theme ? 'lightmode' : 'darkmode'}`}\n      >\n        {title}\n      </h2>\n      <div className={`Characters ${theme ? 'lightmode' : 'darkmode'}`}>\n        {characters.map((character) => (\n          <article className=\"Card-container\" key={character.id}>\n            <img\n              className=\"Card-image\"\n              src={character.image}\n              alt={character.name}\n            />\n            <h3 className=\"Card-name\">{character.name}</h3>\n            <button\n              type=\"button\"\n              hidden={hidden}\n              onClick={() => handleClick(character)}\n            >\n              add to Favorite\n            </button>\n          </article>\n        ))}\n      </div>\n    </>\n  )\n\nconst Characters = () => {\n  const [characters, setCharacters] = useState([])\n  const { theme } = useContext(ThemeContext)\n  // al useReducer se pasa el reducer y el initialState\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState)\n\n  useEffect(() => {\n    fetch('https://rickandmortyapi.com/api/character')\n      .then((response) => response.json())\n      .then((data) => setCharacters(data.results))\n\n    //   // Usando async Await\n    // async function fetchData() {\n    //   const response = await fetch('https://rickandmortyapi.com/api/character')\n    //   const data = await response.json()\n    //   const results = await data.results\n\n    //   setCharacters(results)\n    // }\n    // fetchData()\n  }, [])\n\n  const handleClick = (favorite) => {\n    dispatch({ type: 'ADD_TO_FAVORITE', payload: favorite })\n  }\n\n  console.log('Favoritos: ', favorites.favorite)\n\n  return (\n    <>\n      <CharacterItems\n        theme={theme}\n        characters={favorites.favorite}\n        handleClick={handleClick}\n        hidden={true}\n        title=\"Favorites\"\n      />\n      <CharacterItems\n        theme={theme}\n        characters={characters}\n        handleClick={handleClick}\n        hidden={false}\n        title=\"Characters\"\n      />\n    </>\n  )\n}\n\nexport default Characters\n","import './App.css'\nimport './assets/styles/App.css'\nimport Header from './components/Header'\nimport Characters from './components/Characters'\n\nfunction App() {\n  return (\n    <div className=\"App\" id=\"App\">\n      <Header />\n      <Characters />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport ThemeContext from './context/ThemeContext'\n// ThemeContext nos da un provider\nimport { ThemeContextProvider } from './context/ThemeContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContextProvider>\n      <App />\n    </ThemeContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}